{"ast":null,"code":"var _jsxFileName = \"A:\\\\Webs\\\\laravel-react\\\\announcements-frontend\\\\src\\\\components\\\\AnnouncementList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnnouncementList = () => {\n  _s();\n  const userId = 1;\n  const [announcements, setAnnouncements] = useState([]);\n  const [page, setPage] = useState(0);\n  const [pageSize] = useState(5);\n  const [totalRecords, setTotalRecords] = useState(0);\n  useEffect(() => {\n    const fetchAnnouncements = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/announcement', {\n          params: {\n            page: page,\n            pageSize: pageSize,\n            userid: userId\n          }\n        });\n\n        // Directly use the response data as it is an array\n        setAnnouncements(response.data);\n        console.log(response.data);\n        // You may need to calculate totalRecords from the backend or by other means\n        // Example: totalRecords = length of all data if you have access to it\n        // setTotalRecords(response.data.length); // or another logic to calculate totalRecords\n      } catch (error) {\n        console.error('Error fetching announcements:', error);\n      }\n    };\n    fetchAnnouncements();\n  }, [page, pageSize, userId]);\n  const handleNextPage = () => {\n    if ((page + 1) * pageSize < totalRecords) {\n      setPage(page + 1);\n    }\n  };\n  const handlePreviousPage = () => {\n    if (page > 0) {\n      setPage(page - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Announcements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: announcements.map((announcement, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: announcement.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: announcement.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: announcement.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousPage,\n        disabled: page === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPage,\n        disabled: announcements.length < pageSize,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AnnouncementList, \"x+MKGp9KlNcyxMpCOSLlfs7HzS0=\");\n_c = AnnouncementList;\nexport default AnnouncementList;\nvar _c;\n$RefreshReg$(_c, \"AnnouncementList\");","map":{"version":3,"names":["React","useEffect","useState","axios","ReactMarkdown","jsxDEV","_jsxDEV","AnnouncementList","_s","userId","announcements","setAnnouncements","page","setPage","pageSize","totalRecords","setTotalRecords","fetchAnnouncements","response","get","params","userid","data","console","log","error","handleNextPage","handlePreviousPage","children","fileName","_jsxFileName","lineNumber","columnNumber","map","announcement","index","author","date","body","onClick","disabled","length","_c","$RefreshReg$"],"sources":["A:/Webs/laravel-react/announcements-frontend/src/components/AnnouncementList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n \r\nimport axios from 'axios';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst AnnouncementList = () => {\r\n  const   userId   = 1;\r\n  const [announcements, setAnnouncements] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize] = useState(5);\r\n  const [totalRecords, setTotalRecords] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchAnnouncements = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/announcement', {\r\n          params: {\r\n            page: page,\r\n            pageSize: pageSize,\r\n            userid: userId\r\n          }\r\n        });\r\n\r\n        // Directly use the response data as it is an array\r\n        setAnnouncements(response.data);\r\n        console.log( response.data);\r\n        // You may need to calculate totalRecords from the backend or by other means\r\n        // Example: totalRecords = length of all data if you have access to it\r\n        // setTotalRecords(response.data.length); // or another logic to calculate totalRecords\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching announcements:', error);\r\n      }\r\n    };\r\n\r\n    fetchAnnouncements();\r\n  }, [page, pageSize, userId]);\r\n\r\n  const handleNextPage = () => {\r\n    if ((page + 1) * pageSize < totalRecords) {\r\n      setPage(page + 1);\r\n    }\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    if (page > 0) {\r\n      setPage(page - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Announcements</h1>\r\n     \r\n        <div>\r\n          <ul>\r\n            {announcements.map((announcement, index) => (\r\n              <li key={index}>\r\n                <h2>{announcement.author}</h2>\r\n                <p>{announcement.date}</p>\r\n                <ReactMarkdown>{announcement.body}</ReactMarkdown>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button onClick={handlePreviousPage} disabled={page === 0}>Previous</button>\r\n          <button onClick={handleNextPage} disabled={announcements.length < pageSize}>Next</button>\r\n        </div>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnnouncementList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}